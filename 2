using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;

class MainClass
{
    public enum Choice
    {
        Add,
        Edit,
        Remove,
        Recovery,
        List,
        Exit
    }

    static Dictionary<Choice, int> choicemap = new Dictionary<Choice, int>()
    {
        { Choice.Add, 3 },
        { Choice.Edit, 4 },
        { Choice.Remove, 2 },
        { Choice.Recovery, 2 },
        { Choice.List, 1 },
        { Choice.Exit, 1 }
    };

    public record Person(int ID, string FirstName, string LastName);

    static int ID = 1;
    static List<Person> ActiveList = new List<Person>();
    static List<Person> RemovedList = new List<Person>();

    static void SaveAsJson(string fileName, List<Person> list)
    {
        using (FileStream fs = new FileStream(fileName, FileMode.OpenOrCreate))
        {
            JsonSerializer.SerializeAsync(fs, list).GetAwaiter().GetResult();
        }
    }

    static List<Person> LoadFromJson(string fileName)
    {
        if (!File.Exists(fileName))
        {
            return null;
        }

        using (FileStream fs = File.OpenRead(fileName))
        {
            return JsonSerializer.DeserializeAsync<List<Person>>(fs).GetAwaiter().GetResult();
        }
    }
}
